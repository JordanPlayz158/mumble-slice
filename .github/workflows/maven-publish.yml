# This workflow will publish to Maven Central when a version tag is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Publish

on:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/jordanplayz158/zeroc-docker-image:v3.7.10
    permissions:
      contents: read
      packages: write

    steps:
    - name: Get Ice File
      run: curl -s https://raw.githubusercontent.com/mumble-voip/mumble/${GITHUB_REF#refs/*/}/src/murmur/MumbleServer.ice -o MumbleServer.ice

    - name: Get Slice Libraries? (Not sure what to call them but SliceChecksumDict.ice is required)
      run: git clone --no-checkout https://github.com/zeroc-ice/ice && cd ice && git sparse-checkout init && git sparse-checkout set slice && git checkout v3.7.10

    - name: Slice To Java
      run: slice2java -Iice/slice MumbleServer.ice

    - name: Move files to correct structure
      run: mkdir -p src/main/java/xyz/jordanplayz158/mumble-voip/mumble/server && cp MumbleServer/* src/main/java/xyz/jordanplayz158/mumble-voip/mumble/server

    - uses: actions/checkout@v4
    - name: Set up JDK 8 and publishing to Maven Central
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
#        server-id: oss.sonatype.org
#        server-username: MAVEN_USERNAME
#        server-password: MAVEN_PASSWORD
        cache: gradle

    - name: Add version to gradle.properties
      run: echo "githubVersion=${GITHUB_REF#refs/*/v}" > gradle.properties

    - name: Build package
      run: ./gradlew build

    - uses: actions/upload-artifact@v4
      with:
        path: build/libs/*.jar

    - name: Publish to Maven Central
      run: ./gradlew jreleaserConfig && ./gradlew clean && ./gradlew publish && ./gradlew jreleaserFullRelease
      env:
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          JRELEASER_NEXUS2_TOKEN: ${{ secrets.OSSRH_TOKEN }}
